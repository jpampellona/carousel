{"version":3,"sources":["10.png","100.png","1000.png","20.png","200.png","50.png","500.png","components/AddPlayerForm.js","components/CurrentPlayer.js","components/ModeDropdown.js","components/Players.js","constants/COLORS.js","helpers/getMinDuration.js","helpers/shuffle.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddPlayerForm","setPlayer","playersMap","setPlayersMap","mode","useState","name","setName","inputEl","useRef","action","className","onSubmit","e","preventDefault","trim","playerName","toLowerCase","money","finished","spinsLeft","current","blur","focus","ref","type","placeholder","value","onChange","target","CurrentPlayer","ModeDropdown","player","setMode","active","setActive","_changeMode","data","cx","disabled","aria-haspopup","aria-controls","onClick","aria-hidden","id","role","href","bind","TAGS_MODE_MAP","kids","kiddos","adults","_onDeleteClick","stopPropagation","newPlayersMap","playersArray","Object","keys","filter","sort","a","b","map","key","COLORS","50","100","200","500","1000","getMinDuration","delta","shuffle","temporaryValue","randomIndex","originalArray","array","currentIndex","length","Math","floor","random","useInterval","callback","delay","savedCallback","useEffect","setInterval","clearInterval","logos","logo10","logo20","logo50","logo100","logo200","logo500","logo1000","MAX_PRIZE","rounds","0","700","600","400","300","150","120","70","220","250","initialPlayer","localStorage","getItem","initialMode","initialPlayersMap","JSON","parse","initialCardsScale","initialCarouselScale","App","degree","setDegree","transitionDuration","setTransitionDuration","playerStats","initalRound","round","setRound","isSettingActive","setSettings","touchStartX","settouchStartX","currentPageX","setCurrentPageX","prevPageX","setPrevPageX","swipeDirection","setSwipeDirection","swipeStart","setSwipeStart","isSwappingCards","setSwappingCards","isPlayerReady","setPlayerReady","prize","setPrize","prizeWon","setPrizeWon","cardScale","setCardScale","carouselScale","setCarouselScale","ANGLE","_onPress","pageX","_onMove","_onRelease","deltaX","abs","duration","targetDeg","remainder","newDegree","index","_prize","_handleZoom","dataset","direction","setItem","stringify","spinning","data-action","toFixed","ready","style","transform","item","src","alt","onTouchStart","undefined","touches","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","onTransitionEnd","propertyName","maxPrize","backgroundColor","Players","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.740952a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/10.68a39d73.png\";","module.exports = __webpack_public_path__ + \"static/media/100.497d4c5b.png\";","module.exports = __webpack_public_path__ + \"static/media/1000.5741479e.png\";","module.exports = __webpack_public_path__ + \"static/media/20.cf03a745.png\";","module.exports = __webpack_public_path__ + \"static/media/200.dbc85752.png\";","module.exports = __webpack_public_path__ + \"static/media/50.2edfee5d.png\";","module.exports = __webpack_public_path__ + \"static/media/500.c5d11ba1.png\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useRef, useState } from 'react'\n\nfunction AddPlayerForm({ setPlayer, playersMap, setPlayersMap, mode }) {\n  // console.log('props: ', props)\n  const [name, setName] = useState('')\n  const inputEl = useRef(null)\n  const _onChange = e => {\n    setName(e.target.value)\n  }\n  const _onSubmit = e => {\n    e.preventDefault()\n    if (!name.trim()) {\n      inputEl.current.focus()\n    } else {\n      const playerName = name.toLowerCase()\n      setPlayer(playerName)\n      if (!playersMap[playerName]) {\n        setPlayersMap({\n          ...playersMap,\n          [playerName]: {\n            money: 0,\n            finished: false,\n            spinsLeft: 3,\n            mode,\n          },\n        })\n      }\n      setName('')\n      inputEl.current.blur()\n    }\n  }\n  return (\n    <form action=\"#\" className=\"add-player\" onSubmit={_onSubmit}>\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            ref={inputEl}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={_onChange}\n          />\n        </div>\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-info\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\nexport default AddPlayerForm\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\n\nfunction CurrentPlayer({ setPlayer, name, money }) {\n  return (\n    <div className=\"current-player\">\n      <div className=\"tags has-addons are-medium\">\n        <span className=\"tag is-success is-capitalized\">{name}</span>\n        <span className=\"tag\">\n          {money}\n        </span>\n      </div>\n    </div>\n  )\n}\nexport default CurrentPlayer\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport cx from 'classnames'\nimport React, { useState } from 'react'\n\nfunction ModeDropdown({ player, mode, setMode }) {\n  const [active, setActive] = useState(false)\n  const _onClick = e => {\n    e.preventDefault()\n    setActive(!active)\n  }\n  const _changeMode = (data, e) => {\n    e.preventDefault()\n    setMode(data)\n    setActive(false)\n  }\n  return (\n    <div className={cx('dropdown is-right', { 'is-active': active })}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button\"\n          disabled={!!player}\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={_onClick}\n        >\n          <span className=\"is-capitalized\">{mode}</span>\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a href=\"#\" className=\"dropdown-item\" onClick={_changeMode.bind(null, 'kids')}>\n            Kids\n          </a>\n          <a href=\"#\" className=\"dropdown-item\" onClick={_changeMode.bind(null, 'kiddos')}>\n            Kiddos\n          </a>\n          <a href=\"#\" className=\"dropdown-item\" onClick={_changeMode.bind(null, 'adults')}>\n            Adults\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ModeDropdown\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\n\nconst TAGS_MODE_MAP = {\n  kids: 'is-success',\n  kiddos: 'is-info',\n  adults: 'is-warning',\n}\n\nfunction CurrentPlayer({ playersMap, active, player, setPlayer, setPlayersMap }) {\n  if (!active) {\n    return null\n  }\n  const _onDeleteClick = (data, e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    const newPlayersMap = { ...playersMap }\n    delete newPlayersMap[data]\n    setPlayersMap({\n      ...newPlayersMap,\n    })\n    if (data === player) {\n      setPlayer('')\n    }\n  }\n  const playersArray = Object.keys(playersMap)\n    .filter(name => !playersMap[name].spinsLeft)\n    .sort((a, b) => {\n      return playersMap[b].money - playersMap[a].money\n    })\n  return (\n    <div className=\"players\">\n      <p className=\"menu-label\">Players</p>\n      <ul className=\"menu-list\">\n        {playersArray.map(name => {\n          const mode = playersMap[name].mode\n          return (\n            <li key={name} className=\"\">\n              <div className=\"menu-item\">\n                <div>\n                  <span className={`tag ${TAGS_MODE_MAP[mode]}`}>{mode}</span>{' '}\n                  <span className=\"is-capitalized\">{name}</span>\n                </div>\n                <span className=\"tag is-success is-medium\">\n                  {playersMap[name].money} <span className=\"delete\" onClick={_onDeleteClick.bind(null, name)}></span>\n                </span>\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\nexport default CurrentPlayer\n","const COLORS = {\n  50: '#f4733e',\n  100: '#ac6ca0',\n  200: '#99cc33',\n  500: '#ffcc66',\n  1000: '#6699cc',\n}\nexport default COLORS","const getMinDuration = delta => {\n  if (delta === 0) {\n    return 0\n  }\n  if (delta <= 10) {\n    return 1\n  }\n  if (delta <= 25) {\n    return 2.5\n  }\n  if (delta <= 50) {\n    return 4\n  }\n  if (delta <= 75) {\n    return 5.5\n  }\n  if (delta <= 100) {\n    return 7\n  }\n  return 8\n}\nexport default getMinDuration","const shuffle = (originalArray = []) => {\n  const array = [...originalArray]\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n  return array\n}\n\nexport default shuffle\n","import { useEffect, useRef } from 'react'\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef()\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\nexport default useInterval\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport cx from 'classnames'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport logo10 from './10.png'\nimport logo100 from './100.png'\nimport logo1000 from './1000.png'\nimport logo20 from './20.png'\nimport logo200 from './200.png'\nimport logo50 from './50.png'\nimport logo500 from './500.png'\nimport './App.sass'\nimport AddPlayerForm from './components/AddPlayerForm'\nimport CurrentPlayer from './components/CurrentPlayer'\nimport ModeDropdown from './components/ModeDropdown'\nimport Players from './components/Players'\nimport COLORS from './constants/COLORS'\nimport getMinDuration from './helpers/getMinDuration'\nimport shuffle from './helpers/shuffle'\nimport useInterval from './hooks/useInterval'\n\nconst logos = { logo10, logo20, logo50, logo100, logo200, logo500, logo1000 }\n\nconst MAX_PRIZE = {\n  kids: 1000,\n  kiddos: 500,\n  adults: 200,\n}\n\nconst kids = {\n  0: [1000, 1000, 500, 500, 500, 200, 200, 200, 200, 200, 200, 200],\n  500: [200, 200, 200, 200, 100, 100, 100, 100, 100, 100, 100, 100],\n  200: [500, 500, 200, 200, 200, 200, 200, 200, 100, 100, 100, 100],\n  700: [100, 100, 100, 100, 50, 50, 50, 50, 50, 50, 50, 50],\n  600: [200, 200, 200, 100, 100, 100, 100, 100, 100, 100, 100, 100],\n  400: [200, 200, 200, 200, 200, 200, 100, 100, 100, 100, 100, 100],\n  300: [200, 200, 200, 200, 200, 200, 200, 200, 100, 100, 100, 100],\n}\n\nconst kiddos = {\n  0: [500, 500, 200, 200, 200, 200, 200, 100, 100, 100, 100, 100],\n  200: [100, 100, 50, 50, 50, 50, 50, 50, 20, 20, 20, 20],\n  220: [50, 50, 50, 50, 50, 50, 20, 20, 20, 20, 20, 20],\n  250: [50, 50, 50, 20, 20, 20, 20, 20, 20, 20, 20, 20],\n  300: [50, 50, 50, 20, 20, 20, 20, 20, 20, 20, 20, 20],\n  100: [100, 100, 100, 100, 100, 100, 50, 50, 50, 50, 50, 50],\n  150: [100, 100, 100, 50, 50, 50, 50, 50, 50, 50, 50, 50],\n}\n\nconst adults = {\n  0: [200, 200, 100, 100, 100, 50, 50, 50, 50, 50, 50, 50],\n  100: [50, 50, 50, 50, 20, 20, 20, 20, 20, 20, 20, 20],\n  50: [20, 20, 50, 50, 50, 50, 50, 50, 20, 20, 20, 20],\n  150: [20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10],\n  120: [50, 50, 50, 20, 20, 20, 20, 20, 20, 20, 20, 20],\n  70: [50, 50, 50, 50, 50, 50, 50, 50, 20, 20, 20, 20],\n}\n\nconst rounds = { kids, adults, kiddos }\n\nconst initialPlayer = localStorage.getItem('__PLAYER__')\nconst initialMode = localStorage.getItem('__MODE__')\nconst initialPlayersMap = JSON.parse(localStorage.getItem('__PLAYERS_MAP__'))\nconst initialCardsScale = JSON.parse(localStorage.getItem('__CARDS_SCALE__')) || 1\nconst initialCarouselScale = JSON.parse(localStorage.getItem('__CAROUSEL_SCALE__')) || 1\n\nfunction App() {\n  const [degree, setDegree] = useState(0)\n  const [transitionDuration, setTransitionDuration] = useState(1)\n  const [playersMap, setPlayersMap] = useState(initialPlayersMap || {})\n  const [mode, setMode] = useState(initialMode || 'kids')\n  const [player, setPlayer] = useState(initialPlayer || '')\n  const playerStats = playersMap[player]\n  const initalRound = shuffle(rounds[mode][!!playerStats ? playerStats.money : 0])\n  const [round, setRound] = useState(initalRound)\n  const [isSettingActive, setSettings] = useState(false)\n  const [touchStartX, settouchStartX] = useState(0)\n  const [currentPageX, setCurrentPageX] = useState(0)\n  const [prevPageX, setPrevPageX] = useState(0)\n  const [swipeDirection, setSwipeDirection] = useState('')\n  const [swipeStart, setSwipeStart] = useState(0)\n  const [isSwappingCards, setSwappingCards] = useState(false)\n  const [isPlayerReady, setPlayerReady] = useState(false)\n  const [prize, setPrize] = useState(0)\n  const [prizeWon, setPrizeWon] = useState(0)\n  const [cardScale, setCardScale] = useState(initialCardsScale)\n  const [carouselScale, setCarouselScale] = useState(initialCarouselScale)\n  const ANGLE = 360 / round.length\n  const ALLOWED_TIME = 500\n  const _onTouchStart = e => {\n    if (e.touches.length === 1) {\n      _onPress(e.touches[0])\n    }\n  }\n  const _onMouseDown = e => {\n    _onPress(e)\n  }\n  const _onPress = data => {\n    if (prize) {\n      return\n    }\n    settouchStartX(data.pageX)\n    setSwipeStart(data.pageX)\n    setCurrentPageX(data.pageX)\n    setTransitionDuration(0)\n  }\n  const _onTouchMove = e => {\n    if (e.touches.length === 1) {\n      _onMove(e.touches[0])\n    }\n  }\n  const _onMouseMove = e => {\n    if (touchStartX) {\n      _onMove(e)\n    }\n  }\n  const _onMove = data => {\n    if (prize) {\n      return\n    }\n    setDegree(data.pageX - touchStartX)\n    setPrevPageX(currentPageX)\n    setCurrentPageX(data.pageX)\n  }\n  const _onTouchEnd = e => {\n    if (e.touches.length === 0) {\n      _onRelease()\n    }\n  }\n  const _onMouseUp = () => {\n    if (touchStartX) {\n      _onRelease()\n    }\n  }\n  const _onRelease = () => {\n    if (prize) {\n      return\n    }\n    const deltaX = Math.abs(currentPageX - swipeStart)\n    const duration = Math.round(deltaX / 100) + getMinDuration(deltaX)\n    setTransitionDuration(duration)\n    settouchStartX(0)\n    setSwipeStart(0)\n    setCurrentPageX(0)\n    const targetDeg = swipeDirection === 'left' ? degree - deltaX * duration : degree + deltaX * duration\n    const remainder = targetDeg % ANGLE\n    let newDegree = swipeDirection === 'left' ? targetDeg - remainder : targetDeg + (ANGLE - remainder)\n    if (deltaX === 0) {\n      newDegree = degree\n    }\n    const index = Math.round((newDegree / ANGLE) % round.length)\n    let _prize = 0\n    if (index <= 0) {\n      _prize = round[Math.abs(index)]\n    } else {\n      _prize = round[round.length - index]\n    }\n    setDegree(newDegree)\n    if (player && isPlayerReady) {\n      if (deltaX >= 100) {\n        setPrize(_prize || 0)\n      } else {\n        // swipe faster\n      }\n    } else {\n      // trial spin\n    }\n  }\n  const _onTransitionEnd = e => {\n    if (e.propertyName === 'transform' && prize) {\n      const money = playerStats.money + prize\n      const maxPrize = MAX_PRIZE[mode]\n      setPlayersMap({\n        ...playersMap,\n        [player]: {\n          ...playerStats,\n          money: money,\n          spinsLeft: prize >= maxPrize ? 0 : playerStats.spinsLeft - 1,\n        },\n      })\n      setPrizeWon(prize)\n      setRound(shuffle(rounds[mode][money]))\n    }\n  }\n  const _handleZoom = e => {\n    const action = e.target.dataset['action']\n    switch (action) {\n      case 'CARDS_ZOOM_IN':\n        setCardScale(cardScale + 0.1)\n        break\n      case 'CARDS_ZOOM_OUT':\n        setCardScale(cardScale - 0.1)\n        break\n      case 'CAROUSEL_ZOOM_IN':\n        setCarouselScale(carouselScale + 0.1)\n        break\n      case 'CAROUSEL_ZOOM_OUT':\n        setCarouselScale(carouselScale - 0.1)\n        break\n      default:\n    }\n  }\n  useEffect(() => {\n    const direction = currentPageX > prevPageX ? 'right' : 'left'\n    if (currentPageX && swipeDirection !== direction) {\n      setSwipeDirection(direction)\n      setSwipeStart(currentPageX)\n    }\n  }, [currentPageX])\n  useEffect(() => {\n    localStorage.setItem('__PLAYERS_MAP__', JSON.stringify(playersMap))\n  }, [playersMap])\n  useEffect(() => {\n    localStorage.setItem('__CARDS_SCALE__', JSON.stringify(cardScale))\n  }, [cardScale])\n  useEffect(() => {\n    localStorage.setItem('__CAROUSEL_SCALE__', JSON.stringify(carouselScale))\n  }, [carouselScale])\n  useEffect(() => {\n    localStorage.setItem('__PLAYER__', player)\n    if (player) {\n      setTransitionDuration(0)\n      setDegree(0)\n    } else {\n      setSwappingCards(false)\n    }\n  }, [player])\n  useEffect(() => {\n    localStorage.setItem('__MODE__', mode)\n    setRound(shuffle(rounds[mode][0]))\n  }, [mode])\n  useInterval(\n    () => {\n      setSwipeStart(currentPageX)\n    },\n    swipeStart ? ALLOWED_TIME : null\n  )\n  return (\n    <Fragment>\n      <nav className={cx('nav has-background-info', { spinning: !!prize })}>\n        <span\n          className=\"background has-text-white-bis has-text-weight-bold\"\n          onClick={() => {\n            setSettings(!isSettingActive)\n          }}\n        >\n          {isSettingActive ? 'Back' : 'Carousel'}\n        </span>\n        {!!playerStats && !!playerStats.spinsLeft && !isSettingActive && (\n          <div className=\"text-center\">\n            <div>\n              zoom content{' '}\n              <button data-action=\"CARDS_ZOOM_OUT\" onClick={_handleZoom}>\n                -\n              </button>\n              <span className=\"w-8 text-center inline-block\">{cardScale.toFixed(1)}</span>\n              <button data-action=\"CARDS_ZOOM_IN\" onClick={_handleZoom}>\n                +\n              </button>\n            </div>\n          </div>\n        )}\n        <div className=\"player-info\">\n          {!!playerStats && <CurrentPlayer name={player} setPlayer={setPlayer} money={playerStats.money} />}\n        </div>\n\n        <div className={cx('goodluck', { ready: !!isPlayerReady })}>\n          <p className=\"has-text-grey-dark is-capitalized is-size-4\">Goodluck {player}!</p>\n        </div>\n      </nav>\n      <main className=\"main\">\n        <div className=\"screen active\">\n          <div className=\"screen-content\">\n            <p className=\"has-text-grey-dark is-size-5\">Please enter you name to start</p>\n            <AddPlayerForm setPlayer={setPlayer} playersMap={playersMap} setPlayersMap={setPlayersMap} mode={mode} />\n          </div>\n        </div>\n        {!!playerStats && (\n          <div className={cx('screen', { active: !playerStats.spinsLeft })}>\n            <div className=\"screen-content\">\n              <p className=\"has-text-grey-dark is-size-3\">Congratulations!!!</p>\n              <p className=\"has-text-grey-dark is-size-6\">on winning a total of</p>\n              <p className=\"has-text-dark-grey is-size-1\">{playerStats.money}</p>\n              <button\n                className=\"btn-logout button is-info is-medium\"\n                onClick={() => {\n                  setPlayer('')\n                  setRound(shuffle(rounds[mode][0]))\n                }}\n              >\n                Thank You!\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className={cx('screen', { active: !!playerStats && !!playerStats.spinsLeft })}>\n          <div className=\"screen-content\">\n            <div style={{ transform: `scale(${cardScale})` }}>\n              <p className=\"has-text-grey-dark is-size-6\">Here's how your cards are arranged right now.</p>\n              <div className=\"card-arrangements\">\n                {round.map((item, index) => {\n                  return (\n                    <div className=\"card\" key={`item-${item}-${index}`}>\n                      <div>\n                        <img src={logos[`logo${item}`]} alt={item} />\n                      </div>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"screen-controls\">\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <button\n                  className=\"button is-fullwidth\"\n                  onClick={() => {\n                    setRound(shuffle(round))\n                  }}\n                >\n                  Re-arrange Cards\n                </button>\n              </p>\n              <p className=\"control\">\n                <button\n                  className=\"button is-fullwidth is-link\"\n                  onClick={() => {\n                    setPlayerReady(true)\n                    setDegree(0)\n                    setTransitionDuration(0)\n                  }}\n                >\n                  I'm Ready to Spin!\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className={cx('screen', { active: !!isPlayerReady })}>\n          <div className=\"screen-content\">\n            {!prize && (\n              <div className=\"text-center\">\n                <div>\n                  zoom content{' '}\n                  <button data-action=\"CAROUSEL_ZOOM_OUT\" onClick={_handleZoom}>\n                    -\n                  </button>\n                  <span className=\"w-8 text-center inline-block\">{carouselScale.toFixed(1)}</span>\n                  <button data-action=\"CAROUSEL_ZOOM_IN\" onClick={_handleZoom}>\n                    +\n                  </button>\n                </div>\n              </div>\n            )}\n            <div className={cx('spin-instructions', { spinning: !!prize })}>\n              Spin the cards fast to claim your prize!\n            </div>\n            <div\n              className={`carousel-swipe-container ${isSwappingCards ? 'swapping' : ''}`}\n              onTouchStart={isSwappingCards ? undefined : _onTouchStart}\n              onTouchMove={isSwappingCards ? undefined : _onTouchMove}\n              onTouchEnd={isSwappingCards ? undefined : _onTouchEnd}\n              onMouseDown={isSwappingCards ? undefined : _onMouseDown}\n              onMouseMove={isSwappingCards ? undefined : _onMouseMove}\n              onMouseUp={isSwappingCards ? undefined : _onMouseUp}\n            >\n              <div className={`carousel-container`} style={{ transform: `scale(${carouselScale})` }}>\n                <div\n                  className=\"carousel\"\n                  style={{\n                    transform: 'rotateY(' + degree + 'deg)',\n                    transitionDuration: `${transitionDuration}s`,\n                  }}\n                  onTransitionEnd={_onTransitionEnd}\n                >\n                  {round.map((item, index) => {\n                    const style = isSwappingCards ? {} : { transform: `rotateY(${index * ANGLE}deg) translateZ(160px)` }\n                    return (\n                      <div\n                        className=\"item\"\n                        key={`item-${item}-${index}`}\n                        style={{ backgroundColor: `${COLORS[item]}`, ...style }}\n                      >\n                        {item}\n                        <img src={logos[`logo${item}`]} alt={item} />\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={cx('screen-controls', { spinning: !!prize })}>\n            <button\n              className=\"button is-fullwidth\"\n              onClick={() => {\n                setPlayerReady(false)\n              }}\n            >\n              Go Back\n            </button>\n          </div>\n        </div>\n        <div className={cx('screen settings', { active: isSettingActive })}>\n          <div className=\"screen-content\">\n            <div className=\"mode\">\n              <div>Mode</div>\n              <div>\n                <ModeDropdown mode={mode} setMode={setMode} player={player} />\n              </div>\n            </div>\n            <Players\n              active={isSettingActive}\n              playersMap={playersMap}\n              player={player}\n              setPlayersMap={setPlayersMap}\n              setPlayer={setPlayer}\n            />\n          </div>\n        </div>\n      </main>\n      <div className={cx('s-modal', { active: !!prizeWon })}>\n        <div className=\"s-modal-content\">\n          <div className=\"is-size-4\">Congratulations!!!</div>\n          <div className=\"subtitle is-size-5\">You won</div>\n          <div className=\"title is-size-1\">\n            <img src={logos[`logo${prize}`]} alt={prize} />\n          </div>\n          <div className=\"s-modal-controls\">\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <button\n                  className=\"button is-fullwidth is-link\"\n                  onClick={() => {\n                    setPrize(0)\n                    setPrizeWon(0)\n                    setPlayerReady(false)\n                  }}\n                >\n                  Awesome\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}